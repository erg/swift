list(APPEND CMAKE_MODULE_PATH ${SWIFT_CMAKE_MODULES_DIR} ${SWIFT_CMAKE_PROJECTS_DIR} ${SWIFT_CMAKE_SDKS_DIR})

set(LLVM_BUILD_TYPE "Release" CACHE STRING "") # Debug RelWithDebInfo Release MinSizeRel
if(${LLVM_BUILD_TYPE} STREQUAL "Release")
  set(LLVM_CMAKE_C_FLAGS "-fno-stack-protector" CACHE STRING "")
  set(LLVM_CMAKE_CXX_FLAGS "-fno-stack-protector" CACHE STRING "")
else()
  set(LLVM_CMAKE_C_FLAGS "" CACHE STRING "")
  set(LLVM_CMAKE_CXX_FLAGS "" CACHE STRING "")
endif()

set(LLVM_ENABLE_LTO "" CACHE STRING "") # thin, full
set(LLVM_ENABLE_ASSERTIONS TRUE CACHE BOOL "")
set(LLVM_ENABLE_WARNINGS TRUE CACHE BOOL "")
set(LLVM_ENABLE_DOXYGEN FALSE CACHE BOOL "")
if (LLVM_ENABLE_DOXYGEN)
  find_package(Doxygen REQUIRED)
endif()

set(LLVM_TOOL_SWIFT_BUILD FALSE CACHE BOOL "")
set(LLVM_INCLUDE_DOCS TRUE CACHE BOOL "")
set(LLVM_ENABLE_LIBCXX TRUE CACHE BOOL "")

set(LLVM_ENABLE_MODULES FALSE CACHE BOOL "")
set(LLVM_TOOL_COMPILER_RT_BUILD TRUE CACHE BOOL "")
set(LLVM_BUILD_EXTERNAL_COMPILER_RT TRUE CACHE BOOL "")
set(LLVM_DISABLE_ABI_BREAKING_CHECKS_ENFORCING TRUE CACHE BOOL "")
set(LLVM_HOST_TRIPLE "" CACHE STRING "")
set(LLVM_LIT_ARGS "-v" CACHE STRING "")

set(LLVM_TARGETS_TO_BUILD "X86;ARM;AArch64;PowerPC;SystemZ" CACHE STRING "")

set(INTERNAL_INSTALL_PREFIX "local" CACHE STRING "")
# CMAKE_C_FLAGS Release -fno-stack-protector
# CMAKE_C_FLAGS Debug LTO: -gline-tables-only
# CMAKE_C_FLAGS Debug: -g

# CMAKE_CXX_FLAGS
# DCMAKE_C_FLAGS_RELWITHDEBINFO
# DCMAKE_CXX_FLAGS_RELWITHDEBINFO